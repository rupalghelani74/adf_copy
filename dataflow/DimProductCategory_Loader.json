{
	"name": "DimProductCategory_Loader",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "codata_files",
						"type": "DatasetReference"
					},
					"name": "codata"
				},
				{
					"dataset": {
						"referenceName": "DimProductCategory",
						"type": "DatasetReference"
					},
					"name": "DimProductCategory",
					"description": "Current rows in DimEmployees DW table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimProductCategory",
						"type": "DatasetReference"
					},
					"name": "sinkNew"
				},
				{
					"dataset": {
						"referenceName": "DimProductCategory",
						"type": "DatasetReference"
					},
					"name": "sinkInactive",
					"description": "Close out the old version of the row"
				},
				{
					"dataset": {
						"referenceName": "DimProductCategory",
						"type": "DatasetReference"
					},
					"name": "sinkChanges",
					"description": "New row with changes"
				}
			],
			"transformations": [
				{
					"name": "codataWithSurrogate"
				},
				{
					"name": "DoesRowExist"
				},
				{
					"name": "RowHasChanged"
				},
				{
					"name": "codataWithDates"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tconum as string,\n\t\tconame as string,\n\t\tcity as string,\n\t\tstate as string,\n\t\tcountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['*.*']) ~> codata\nsource(output(\n\t\tProductCategory as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProductCategory\ncodata, DimProductCategory lookup(codata@conum == DimCompany@conum,\n\tmultiple: false,\n\tpickup: 'first',\n\tdesc(EndDate, true),\n\tbroadcast: 'auto')~> codataWithSurrogate\ncodataWithDates split(isNull(dimcompany),\n\tdisjoint: false) ~> DoesRowExist@(NewRow, CurrentRow)\nDoesRowExist@CurrentRow, DimProductCategory exists(DoesRowExist@CurrentRow@dimcompany == DimCompany@dimcompany\n\t&& DoesRowExist@CurrentRow@conum == DimCompany@conum\n\t&& DoesRowExist@CurrentRow@coname == DimCompany@coname\n\t&& DoesRowExist@CurrentRow@city == DimCompany@city\n\t&& DoesRowExist@CurrentRow@country == DimCompany@country\n\t&& coalesce(DoesRowExist@CurrentRow@state,\"\") == coalesce(DimCompany@state,\"\"),\n\tnegate:true,\n\tbroadcast: 'auto')~> RowHasChanged\ncodataWithSurrogate derive(StartDate = currentTimestamp(),\n\t\tEndDate = toTimestamp(\"9999-12-31 23:59:59\"),\n\t\tRowStatusNew = \"NEW\",\n\t\tRowStatusChange = \"CHANGE\") ~> codataWithDates\nRowHasChanged alterRow(updateIf(1==1)) ~> AlterRow1\nDoesRowExist@NewRow sink(input(\n\t\tProductCategory as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tconum = DoesRowExist@NewRow@conum,\n\t\tconame = DoesRowExist@NewRow@coname,\n\t\tcity = DoesRowExist@NewRow@city,\n\t\tstate = DoesRowExist@NewRow@state,\n\t\tcountry = DoesRowExist@NewRow@country,\n\t\tStartDate,\n\t\tEndDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkNew\nAlterRow1 sink(input(\n\t\tProductCategory as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['dimcompany'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tdimcompany,\n\t\tEndDate = StartDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkInactive\nRowHasChanged sink(input(\n\t\tProductCategory as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tconum = DoesRowExist@CurrentRow@conum,\n\t\tconame = DoesRowExist@CurrentRow@coname,\n\t\tcity = DoesRowExist@CurrentRow@city,\n\t\tstate = DoesRowExist@CurrentRow@state,\n\t\tcountry = DoesRowExist@CurrentRow@country,\n\t\tStartDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkChanges"
		}
	}
}